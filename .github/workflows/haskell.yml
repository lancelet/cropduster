name: Haskell CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      HUGO_VERSION: 0.115.4

    steps:
    - uses: actions/checkout@v3
    - uses: haskell-actions/setup@v2
      with:
        ghc-version: '9.4.7'
        cabal-version: '3.8.1.0'
    - uses: actions/setup-go@v4
      with:
        go-version: '>=1.21.3'

    - name: Cache
      uses: actions/cache@v3
      env:
        cache-name: cache-cabal
      with:
        path: |
          ~/.cabal
          ~/.venv
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install dependencies
      run: |
        cabal update
        cabal build --only-dependencies --enable-tests --enable-benchmarks

    - name: Build
      run: cabal build --enable-tests --enable-benchmarks all

    - name: Run tests
      run: cabal test all

    - name: Install ffmpeg
      run: sudo apt-get install -y ffmpeg

    - name: Create and activate Python venv
      run: |
        python -m venv .venv
        source .venv/bin/activate

    - name: Install scipy and matplotlib
      run: |
        pip install scipy matplotlib

    - name: Run video generation
      run: |
        ./linfit-examples.sh
        ./msd-examples.sh

    - name: Install Hugo CLI
      run: |
        wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
        && sudo dpkg -i ${{ runner.temp }}/hugo.deb

    - name: Install Dart Sass
      run: sudo snap install dart-sass

    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v3

    - name: Install Node.js dependencies
      run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

    - name: Build with Hugo
      env:
        # For maximum backward compatibility with Hugo modules
        HUGO_ENVIRONMENT: production
        HUGO_ENV: production
      run: |
        pushd gh-site
        hugo \
          --gc \
          --minify \
          --baseURL "${{ steps.pages.outputs.base_url }}/"

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: ./gh-site/public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2